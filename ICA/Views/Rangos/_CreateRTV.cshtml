@model List<ICA.Models.RangoTorqueVacio>
<div class="modal-header">
    <h5 class="modal-title">Agregar Rango Torque Vacío</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    <form id="valor-form">
        @Html.AntiForgeryToken()
        <div class="form-row">
            <div class="col-sm-12">
                <div class="row" style="padding-top: 5px;">
                    <div class="col-sm-4">
                        <label><b>Estatus</b></label>
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("estatus", new SelectList(ViewBag.EstatusList, "Value", "Text", "A"), new { @class = "form-control", @required = "true" })
                    </div>
                </div>
                <div class="row" style="padding-top: 8px;">
                    <div class="col-sm-4">
                        <label><b>Base</b></label>
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownList("base", new SelectList(ViewBag.BasesList, "Value", "Text", "A"), new { @class = "form-control", @required = "true" })
                    </div>
                </div>
                <div class="row" style="padding-top: 8px;">
                    <div class="col-sm-4">
                        <label><b>Valor Torque</b></label>
                    </div>
                    <div class="col-sm-8">
                        <input type="number" required class="form-control" id="valortorque" name="valortorque" value="0">
                    </div>
                </div>
                <div class="row" style="padding-top: 8px;">
                    <div class="col-sm-4">
                        <label><b>Tamaño Grano</b></label>
                    </div>
                    <div class="col-sm-8">
                        <input type="number" required class="form-control" id="tamanograno" name="tamanograno" value="0">
                    </div>
                </div>
                <div class="row" style="padding-top: 8px;">
                    <div class="col-sm-4">
                        <label><b>Resultado</b></label>
                    </div>
                    <div class="col-sm-8">
                        <input type="number" required class="form-control" id="resultado" name="resultado" value="0">
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-success btn-sm" id="guardar-rangotorque" data-dismiss="modal">Guardar</button>
    <button type="button" class="btn btn-light btn-sm" data-dismiss="modal">Cancelar</button>
</div>
<script type="text/javascript">
    $(function () {
        jQuery.extend(jQuery.validator.messages, {
            required: "Este campo es requerido"
        });

        $('#guardar-rangotorque').click(function (e) {
            if (veriFormRangoTorque()) {
                var $form = $("#valor-form");
                if (!$form.valid()) {
                    return false;
                } else {
                    var data = {
                        __RequestVerificationToken: $form.find('input[name="__RequestVerificationToken"]').val(),
                        rangotorque: {
                            Base: $form.find('#base').val(),
                            ValorTorque: $form.find('#valortorque').val(),
                            TamGrano: $form.find('#tamanograno').val(),
                            Resultado: $form.find('#resultado').val(),
                            Estatus: $form.find('#estatus').val(),
                        }
                    };
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("SaveRTV", "Rangos")',
                        data: data,
                        dataType: 'JSON',
                        success: function (response) {
                            AlertaMsg('success', 'Valores Guardados Correctamente.', 2000);
                            TablaRangosTorquesDT.clear().draw();
                            TablaRangosTorquesDT.rows.add(response.TablaRangosV);
                            TablaRangosTorquesDT.columns.adjust().draw();
                        },
                        error: function () {
                            AlertaMsg('danger', 'Hubo un error al intentar guardar los cambios, porfavor intente nuevamente.', 2000);
                        },
                    });
                }
            } else {
                return false;
            }
        });

        function veriFormRangoTorque() {
            var ok = true, msg = '';
            if (parseFloat($('#valortorque').val()) === 0 || parseFloat($('#tamanograno').val()) === 0 || parseFloat($('#resultado').val()) === 0) {
                ok = false;
                msg = 'Cantidad No válida';
            }
            if (!ok) {

            }
            return ok;
        }
    });
</script>